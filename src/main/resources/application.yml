spring:
  application:
    name: choerodon-platform
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost/hzero_platform?useUnicode=true&characterEncoding=utf-8&useSSL=false}
    username: ${SPRING_DATASOURCE_USERNAME:hzero}
    password: ${SPRING_DATASOURCE_PASSWORD:hzero}
    hikari:
      # 连接池最小空闲连接数
      minimum-idle: ${SPRING_DATASOURCE_MINIMUM_IDLE:20}
      # 连接池允许的最大连接数
      maximum-pool-size: ${SPRING_DATASOURCE_MAXIMUM_POOL_SIZE:200}
      # 等待连接池分配连接的最大时长（毫秒）
      connection-timeout: ${SPRING_DATASOURCE_CONNECTION_TIMEOUT:30000}
    driver-class-name: com.mysql.jdbc.Driver
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${SPRING_REDIS_PORT:6379}
    database: ${SPRING_REDIS_DATABASE:1}
    lettuce:
      pool:
        # 资源池中最大连接数
        # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整
        max-active: ${SPRING_REDIS_POOL_MAX_ACTIVE:50}
        # 资源池运行最大空闲的连接数
        # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整，一般建议和max-active保持一致，避免资源伸缩带来的开销
        max-idle: ${SPRING_REDIS_POOL_MAX_IDLE:50}
        # 当资源池连接用尽后，调用者的最大等待时间(单位为毫秒)
        # 默认 -1 表示永不超时，设置5秒
        max-wait: ${SPRING_REDIS_POOL_MAX_WAIT:5000}

server:
  undertow:
    threads:
      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接
      # 默认值为8，建议设置每个CPU核心一个线程
      io: ${SERVER_UNDERTOW_IO_THREADS:4}
      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程
      # 默认等于 io-threads*8，它的值设置取决于系统的负载，可适当调大该值
      worker: ${SERVER_UNDERTOW_WORKER_THREADS:128}
    # 每块buffer的空间大小，越小空间被利用越充分
    # 不要设置太大，以免影响其他应用，合适即可
    buffer-size: ${SERVER_UNDERTOW_BUFFER_SIZE:1024}
    # 是否分配的直接内存(NIO直接分配的堆外内存)
    # 默认false
    direct-buffers: true
    # HTTP POST请求最大的大小
    # 默认0，无限制，可设置10M
    max-http-post-size: 10485760

feign:
  circuitbreaker:
    # 启用断路器
    enabled: ${FEIGN_CIRCUITBREAKER_ENABLED:true}
  # 请求压缩配置
  compression:
    request:
      # 配置请求GZIP压缩
      enabled: ${FEIGN_COMPRESSION_REQUEST_ENABLED:true}
      # 配置压缩数据大小的下限
      min-request-size: ${FEIGN_COMPRESSION_REQUEST_MIN_REQUEST_SIZE:2048}
  # Feign客户端配置
  client:
    config:
      # Feign客户端默认配置
      default:
        # 连接超时
        connectTimeout: ${FEIGN_CLIENT_CONFIG_DEFAULT_CONNECT_TIMEOUT:2000}
        # 读取超时
        readTimeout: ${FEIGN_CLIENT_CONFIG_DEFAULT_READ_TIMEOUT:5000}
        # Feign日志级别：NONE/BASIC/HEADERS/FULL
        loggerLevel: ${FEIGN_CLIENT_CONFIG_DEFAULT_LOGGER_LEVEL:FULL}

mybatis:
  mapperLocations: classpath*:/mapper/*.xml
  configuration:
    mapUnderscoreToCamelCase: true
    enable-mapper-override: true

choerodon:
  saga:
    service: choerodon-asgard

hzero:
  service:
    platform:
      name: choerodon-platform
    oauth:
      name: choerodon-oauth
    iam:
      name: choerodon-iam
    file:
      name: choerodon-file
    message:
      name: choerodon-message
    admin:
      name: choerodon-admin
    swagger:
      name: choerodon-swagger
    gateway:
      name: choerodon-gateway
    monitor:
      name: choerodon-monitor
  lov:
    # 是否开启SQL类型LOV
    sql:
      enabled: ${HZERO_LOV_SQL_ENABLED:true}
    # 是否开启LOV值翻译
    value:
      enabled: ${HZERO_LOV_VALUE_ENABLED:true}
  platform:
    # 是否启动初始化缓存
    init-cache: ${HZERO_PLATFORM_INIT_CACHE:true}
    # 平台HTTP协议
    http-protocol: ${HZERO_PLATFORM_HTTP_PROTOCOL:http}
    # 角色模板编码
    role-template-codes:
      - ${HZERO_SALES_TEMPLATE_CODE:role/organization/default/template/sales}
      - ${HZERO_EXPERTS_TEMPLATE_CODE:role/organization/default/template/experts}
    regist-entity:
    # 是否开启实体类的注册
      enable: ${HZERO_REGIST_ENTITY_ENABLE:false}
    # 公钥和私钥
    encrypt:
      public-key: ${HZERO_OAUTH_PASSWORD_PUBLIC_KEY:MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJL0JkqsUoK6kt3JyogsgqNp9VDGDp+t3ZAGMbVoMPdHNT2nfiIVh9ZMNHF7g2XiAa8O8AQWyh2PjMR0NiUSVQMCAwEAAQ==}
      private-key: ${HZERO_OAUTH_PASSWORD_PRIVATE_KEY:MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAkvQmSqxSgrqS3cnKiCyCo2n1UMYOn63dkAYxtWgw90c1Pad+IhWH1kw0cXuDZeIBrw7wBBbKHY+MxHQ2JRJVAwIDAQABAkB3TKXZcVP6tSSN0UgOjLPxng99Z4xvrWJ1jdHFB7TYyUDcnOtE6GkeeMGxtszYtuZ0m5rN9r8eRvIdVUciXbQhAiEA7WGcLd+cvHHA8xNFrbT78Aq4iYm0TVTS6m05ZEOS328CIQCeetcFV8Kdb+P2Y+yWvMtbyFGhROQIFizvxM3S3TiZrQIhAJLrYPB7f9SaSyOm/+89Htk4qXJmyjM6lrgFFgpaUGL9AiB+pkCr/mSDGOYfA+AQ3rPNl5rUvI9XfxFOVAMAntYayQIhAO0hrnwtng6Ubs+58BN69vAl+sd/xugf0jsHcNgZppAb}
  data:
    permission:
      db-owner: ${HZERO_DB_OWNER:}
      # 数据权限本地缓存过期时间
      local-cache-expiration-time: ${HZERO_DATA_PERMISSION_CACHE_EXPIR_TIME:1s}
    change:
      enable: false
  audit:
    operation:
      # 全局开关，默认 false
      enable: false
    data:
      # 是否启用数据变更监控功能
      enable: false
  scheduler:
    executor-code: HPFM_EXECUTOR
  export:
    enable-async: true
  api-customize:
    enable-agent: false
  resource:
    # 匹配的资源才会解析JwtToken便于得到UserDetails
    pattern: ${HZERO_RESOURCE_PATTERN:/v1/*,/hzero/*,/hpfm/v1/*,/hpfm/hzero/*,/choerodon/v1/*}
  field-permission:
    enable: true
  websocket:
    # 与当前服务的redis数据库一致
    redisDb: ${SPRING_REDIS_DATABASE:1}
  kms:
    load-key-from-server: false

logging:
  level:
    org.springframework.cloud: info
    io.github.resilience4j: info
    com.netflix.discovery: warn
    org.hzero.boot.platform.lov: info
    org.apache.ibatis: ${LOG_LEVEL:info}
    io.choerodon: ${LOG_LEVEL:info}
    org.hzero: ${LOG_LEVEL:info}
