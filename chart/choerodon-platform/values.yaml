## 初始化配置至配置服务及初始化本服务数据库
preJob:
  # job 超时时间
  timeout: 1200
  # 工具 jar 包镜像库地址
  image: registry.cn-shanghai.aliyuncs.com/c7n/dbtool:0.8.0
  preInitDB:
    # 是否初始化本服务数据库
    enabled: true
    datasource:
      # 本服务数据库相关信息，端口号结尾，不要加/或者数据库名
      url: jdbc:mysql://localhost:3306?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true&serverTimezone=Asia/Shanghai
      username: username
      password: password

## 实例运行数量
replicaCount: 1

## 设置默认的 image、imageTag 和 imagePullPolicy。
image:
  repository: registry.cn-shanghai.aliyuncs.com/c7n/base-service
  tag: ~
  pullPolicy: IfNotPresent

## Deployment 更新策略
deploymentUpdate:
  type: RollingUpdate
  maxUnavailable: 0
  maxSurge: 100%

## Pod 优先级设置
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""

## Pod 节点分配
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
tolerations: []
affinity: {}

## 给 Pod 附加的 annotations
podAnnotations: {}

## ## Pod 附加的 labels
podLabels: {}

## 实例运行时的环境变量
env:
  open:
    # 本实例服务端口
    SERVER_PORT: 8100
    # 本实例管理端口
    MANAGEMENT_SERVER_PORT: 8101

    # 注册服务地址
    EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://register-server:8000/eureka/

    # Redis 主机地址
    SPRING_REDIS_HOST: localhost
    # Redis 端口
    SPRING_REDIS_PORT: 6379
    # Redis db
    SPRING_REDIS_DATABASE: 1
    # 资源池中最大连接数
    # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整
    SPRING_REDIS_POOL_MAX_ACTIVE: 50
    # 资源池运行最大空闲的连接数
    # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整，一般建议和max-active保持一致，避免资源伸缩带来的开销
    SPRING_REDIS_POOL_MAX_IDLE: 50
    # 当资源池连接用尽后，调用者的最大等待时间(单位为毫秒)
    # 默认 -1 表示永不超时，设置5秒
    SPRING_REDIS_POOL_MAX_WAIT: 5000

    # 数据库连接地址
    SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/hzero_platform?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true&serverTimezone=Asia/Shanghai
    # 数据库用户名
    SPRING_DATASOURCE_USERNAME: choerodon
    # 数据库密码
    SPRING_DATASOURCE_PASSWORD: password
    # 连接池最小空闲连接数
    SPRING_DATASOURCE_MINIMUM_IDLE: 20
    # 连接池允许的最大连接数
    SPRING_DATASOURCE_MAXIMUM_POOL_SIZE: 200
    # 等待连接池分配连接的最大时长（毫秒）
    SPRING_DATASOURCE_CONNECTION_TIMEOUT: 30000

    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接
    # 默认值为8，建议设置每个CPU核心一个线程
    SERVER_UNDERTOW_IO_THREADS: 4
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程
    # 默认等于 io-threads*8，它的值设置取决于系统的负载，可适当调大该值
    SERVER_UNDERTOW_WORKER_THREADS: 128
    # 每块buffer的空间大小，越小空间被利用越充分
    # 不要设置太大，以免影响其他应用，合适即可
    SERVER_UNDERTOW_BUFFER_SIZE: 1024
    # Hystrix 熔断超时时间
    HYSTRIX_COMMAND_TIMEOUT_IN_MILLISECONDS: 12000
    # Ribbon 读取超时时间
    RIBBON_READ_TIMEOUT: 5000
    # Ribbon 连接超时时间
    RIBBON_CONNECT_TIMEOUT: 2000
    # 是否开启SQL类型LOV
    HZERO_LOV_SQL_ENABLED: true
    # 是否开启LOV值翻译
    HZERO_LOV_VALUE_ENABLED: true
    # 是否启动初始化缓存
    HZERO_PLATFORM_INIT_CACHE: true
    # 平台HTTP协议
    HZERO_PLATFORM_HTTP_PROTOCOL: http
    # 是否开启实体类的注册
    HZERO_REGIST_ENTITY_ENABLE: false
    # 全局RSA公钥
    HZERO_OAUTH_PASSWORD_PUBLIC_KEY: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJL0JkqsUoK6kt3JyogsgqNp9VDGDp+t3ZAGMbVoMPdHNT2nfiIVh9ZMNHF7g2XiAa8O8AQWyh2PjMR0NiUSVQMCAwEAAQ==
    # 全局RSA私钥
    HZERO_OAUTH_PASSWORD_PRIVATE_KEY: MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAkvQmSqxSgrqS3cnKiCyCo2n1UMYOn63dkAYxtWgw90c1Pad+IhWH1kw0cXuDZeIBrw7wBBbKHY+MxHQ2JRJVAwIDAQABAkB3TKXZcVP6tSSN0UgOjLPxng99Z4xvrWJ1jdHFB7TYyUDcnOtE6GkeeMGxtszYtuZ0m5rN9r8eRvIdVUciXbQhAiEA7WGcLd+cvHHA8xNFrbT78Aq4iYm0TVTS6m05ZEOS328CIQCeetcFV8Kdb+P2Y+yWvMtbyFGhROQIFizvxM3S3TiZrQIhAJLrYPB7f9SaSyOm/+89Htk4qXJmyjM6lrgFFgpaUGL9AiB+pkCr/mSDGOYfA+AQ3rPNl5rUvI9XfxFOVAMAntYayQIhAO0hrnwtng6Ubs+58BN69vAl+sd/xugf0jsHcNgZppAb
    # 匹配的资源才会解析JwtToken便于得到UserDetails
    HZERO_RESOURCE_PATTERN: /v1/*,/hzero/*,/iam/v1/*,/iam/hzero/*,/choerodon/v1/*
    # Ribbon从DiscoveryClient同步Server的间隔时间，默认30秒
    RIBBON_SERVER_LIST_REFRESH_INTERVAL: 10000
    # 续约间隔时间，默认30秒
    EUREKA_INSTANCE_LEASE_RENEWAL_INTERVAL_IN_SECONDS: 30
    # 实例故障摘除时间，默认90秒，实际是90*2=180秒，配置45就是90秒
    EUREKA_INSTANCE_LEASE_EXPIRATION_DURATION_IN_SECONDS: 45
    # 执行命令线程池的核心线程数，也是命令执行的最大并发量，默认10
    HYSTRIX_THREADPOOL_DEFAULT_CORE_SIZE: 128
    # 最大执行线程数
    HYSTRIX_THREADPOOL_DEFAULT_MAXIMUM_SIZE: 256
    # 日志级别
    LOG_LEVEL: info
    # JVM配置
#    JAVA_OPTS: >-
#      -Xms1024m
#      -Xmx1536m

    ## Skywalking 配置参数
    # SKYWALKING_OPTS: >-
    #   -javaagent:/agent/skywalking-agent.jar
    #   -Dskywalking.agent.application_code=asgard-service
    #   -Dskywalking.agent.sample_n_per_3_secs=-1
    #   -Dskywalking.collector.backend_service=oap.skywalking:11800


## Liveness 和 Readiness 探针相关配置
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
livenessProbe:
  initialDelaySeconds: 180
  periodSeconds: 30
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 15
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

## 资源请求和限制相关配置
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources: 
  limits:
    # cpu: 100m
    memory: 2Gi
  requests:
    # cpu: 100m
    memory: 2Gi

## 插件相关配置
plugins:
  # skywalking agent 镜像地址
  skywalkingAgentImage: registry.cn-shanghai.aliyuncs.com/c7n/skywalking-agent:6.6.0

## service 相关设置
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  # 是否启用 service 暴露本服务
  enabled: true
  # Service 名称
  name: choerodon-platform
  # Service 类型
  type: ClusterIP
  # 指定 service 的 clusterIP
  clusterIP: ~
  # 端口设置
  ports: 
    # 服务端口
    http: 
      port: 8100
      nodePort: 30106
    # 管理端口
    actuator: 
      port: 8101
      nodePort: 30107
  ## externalIPs 设置
  # externalIPs:
  #   - externalIp1
  annotations: {}
    # prometheus.io/scrape: 'true'
    # prometheus.io/path: '/actuator/prometheus'
    # prometheus.io/port: '8101'

## 指标收集
metrics:
  # 收集应用的指标数据路径
  path: /actuator/prometheus
  # 性能指标应用分组
  group: spring-boot

# 是否收集日志至EFK
logs:
  enabled: false
  # 日志收集格式
  parser: spring-boot